% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/oc_OptimalCutpoints.R
\name{oc_OptimalCutpoints}
\alias{oc_OptimalCutpoints}
\title{A tidy wrapper for optimal.cutpoints}
\usage{
oc_OptimalCutpoints(data, x, class, methods, pos_class, neg_class, direction,
  ...)
}
\arguments{
\item{data}{A data frame or tibble in which the columns that are given in x, class and possibly subgroup can be found}

\item{x}{The variable name (with or without quotation marks) to be used for classification, e.g. predictions or test values.}

\item{class}{The variable name (with or without quotation marks) indicating class membership.}

\item{methods}{(character) See ?optimal.cutpoints for available methods.}

\item{pos_class}{(optional) The value of class that indicates the positive class}

\item{neg_class}{(optional) The value of class that indicates the negative class}

\item{direction}{(character, optional) Use ">" or "<" to indicate whether x
is supposed to be larger or smaller for the positive class.}

\item{...}{Further optional arguments that will be passed to optcut_func.}
}
\value{
A data frame with one row, the column optimal_cutpoint and a second
column named after method that gives the obtained metric value.
}
\description{
Determine "optimal" cutpoints using optimal.cutpoints and its included methods
from the OptimalCutpoints package. The output will be a tidy data frame.of
the optimal cutpoint and the value of the metric, depending on methods, that
was obtained in-sample.
}
\examples{
library(OptimalCutpoints)
data(elas)
oc_OptimalCutpoints(elas, "elas", "status", methods = "Youden", pos_class = 1,
direction = ">")
}

